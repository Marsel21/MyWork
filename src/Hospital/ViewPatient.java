/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Hospital;

import Hospital.stackImpl.Stack;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author userr
 */
public class ViewPatient extends javax.swing.JFrame {

    /**
     * Creates new form ViewPatient
     */
    DefaultTableModel model;
    

    public ViewPatient() {
        initComponents();
        hospitalName.setText(DocPanel.hospital+" Hospital");
        Show_Users_In_JTable(getUserStack());
        if(login.LoginPersonType.equals("Staff")){
        deleteBtn.setVisible(false);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        logout = new javax.swing.JButton();
        jLabel7Exit1 = new javax.swing.JLabel();
        jLabel8Mini = new javax.swing.JLabel();
        back1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        deleteBtn = new javax.swing.JButton();
        searchPatientTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ascBtn = new javax.swing.JButton();
        dscBtn = new javax.swing.JButton();
        hospitalName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(102, 102, 102)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 290, 60));

        logout.setBackground(new java.awt.Color(102, 102, 102));
        logout.setForeground(new java.awt.Color(255, 255, 255));
        logout.setText("Log out");
        logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        jPanel1.add(logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 70, 77, -1));

        jLabel7Exit1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7Exit1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7Exit1.setText("X");
        jLabel7Exit1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7Exit1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7Exit1MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel7Exit1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 0, -1, 36));

        jLabel8Mini.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8Mini.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8Mini.setText("-");
        jLabel8Mini.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel8Mini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MiniMouseClicked(evt);
            }
        });
        jPanel1.add(jLabel8Mini, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 0, 20, 36));

        back1.setBackground(new java.awt.Color(102, 102, 102));
        back1.setForeground(new java.awt.Color(255, 255, 255));
        back1.setText("<<Back");
        back1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back1ActionPerformed(evt);
            }
        });
        jPanel1.add(back1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Current Patients");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Generate Report");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        patientTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Full Name", "Date of Birth", "Gender", "Contact no", "File Number", "Proc type", "Date of Proc", "Echo", "Grafts", "Extra"
            }
        ));
        jScrollPane2.setViewportView(patientTable);

        deleteBtn.setBackground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("Delete");
        deleteBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        searchPatientTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchPatientTxtKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Search Patient");

        ascBtn.setBackground(new java.awt.Color(255, 255, 255));
        ascBtn.setText("Ascending Order");
        ascBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ascBtnActionPerformed(evt);
            }
        });

        dscBtn.setBackground(new java.awt.Color(255, 255, 255));
        dscBtn.setText("Descending Order");
        dscBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dscBtnActionPerformed(evt);
            }
        });

        hospitalName.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        hospitalName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hospitalName.setText("HospitalName");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(147, 147, 147)
                        .addComponent(ascBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(dscBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(searchPatientTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(102, 102, 102)
                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(357, 357, 357))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(hospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(294, 294, 294))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(hospitalName)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchPatientTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ascBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dscBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public Stack<User> getUserStack() {
        Stack<User> stack = new Stack<User>();
        
        try {
            BufferedReader bfReader = new BufferedReader(new FileReader(DocPanel.hospital+"hospital.txt"));
            String str = bfReader.readLine();
            while (str != null) {
                String strr[] = str.split(", ");
                User user = new User(strr[0], strr[1], strr[2], strr[3], strr[4], strr[5], strr[6],strr[7],strr[8],strr[9]);
                stack.push(user);
                str = bfReader.readLine();
            }
            bfReader.close();
        } catch (Exception ex) {
            System.out.println(ex);
        }
        return stack;

    }

    //10): hirerachical composite data structure 
    //14): use of array
    
    public void Show_Users_In_JTable(Stack<User> stack) {
        model = (DefaultTableModel) patientTable.getModel();
        Object[] row = new Object[10];
        int size = stack.size();
        for (int i = 0; i < size; i++) {
            User user = stack.pop();
            row[0] = user.getName();
            row[1] = user.getDOB();
            row[2] = user.getGender();
            row[3] = user.getContactNo();
            row[4] = user.getFileNo();
            row[5] = user.getProcType();
            row[6] = user.getProcDate();
            row[7]=user.getEcho();
            row[8]=user.getGraft();
            row[9]=user.getExtra();
            model.addRow(row);
        }
    }


    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        //creating object of login form and set visible
        login w = new login();
        w.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void jLabel7Exit1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7Exit1MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel7Exit1MouseClicked

    private void jLabel8MiniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MiniMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabel8MiniMouseClicked

    private void back1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back1ActionPerformed

            Menu w = new Menu();
            w.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_back1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        GenerateReport w = new GenerateReport();
        w.setVisible(true);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) patientTable.getModel(); //get selected data from search table and add that into basket table
        int rowSelected = patientTable.getSelectedRow(); //get selected row
        String name = (String) dtm.getValueAt(rowSelected, 0);
        deleteDataFromFile(name);
        dtm.setRowCount(0);
        Show_Users_In_JTable(getUserStack());
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void searchPatientTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchPatientTxtKeyReleased
        String name = searchPatientTxt.getText();
        filter(name);
    }//GEN-LAST:event_searchPatientTxtKeyReleased

    private void ascBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ascBtnActionPerformed
        // TODO add your handling code here:
        Stack<User> stack=sortInASC();
        DefaultTableModel dtm = (DefaultTableModel) patientTable.getModel(); 
        dtm.setRowCount(0);
        Show_Users_In_JTable(stack);
    }//GEN-LAST:event_ascBtnActionPerformed

    private void dscBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dscBtnActionPerformed
        // TODO add your handling code here:
        Stack<User> stack=sortInDSC();
        DefaultTableModel dtm = (DefaultTableModel) patientTable.getModel(); 
        dtm.setRowCount(0);
        Show_Users_In_JTable(stack);
    }//GEN-LAST:event_dscBtnActionPerformed

    private void filter(String search) {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(model);
        patientTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }
    // 5): we have merged stack and string array data structure
    // 9): we are parsing data from file and deleting the data and again adding it into file
    // 13): we are deleting data from file 
    // 14): use of array
    public static void deleteDataFromFile(String name) {
        Stack<String[]> stack = getPatientStacks();
        Stack<String[]> updatedStack = new Stack<>();
        int size = stack.size();
        for (int i = 0; i < size; i++) {
            String[] strr = stack.pop();
            if (!strr[0].equals(name)) {
                updatedStack.push(strr);
            } else {
                JOptionPane.showMessageDialog(null, "Deleted Succesfully");
            }
        }
        try {
            BufferedWriter bfWriter = new BufferedWriter(new FileWriter(DocPanel.hospital+"hospital.txt"));
            size = updatedStack.size();
            for (int i = 0; i < size; i++) {
                String[] strr = updatedStack.pop();
                bfWriter.write(strr[0] + ", ");
                bfWriter.write(strr[1] + ", ");
                bfWriter.write(strr[2] + ", ");
                bfWriter.write(strr[3] + ", ");
                bfWriter.write(strr[4] + ", ");
                bfWriter.write(strr[5] + ", ");
                bfWriter.write(strr[6] + ", ");
                bfWriter.write(strr[7] + ", ");
                bfWriter.write(strr[8] + ", ");
                bfWriter.write(strr[9] + ", ");
                bfWriter.write(strr[10]);
                bfWriter.newLine();
            }

            bfWriter.close();
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }
    //5): merging two or more data structures
    //10):we have used a hirerachical composite data structure
    //14): use of array
    public static Stack<String[]> getPatientStacks() {
        Stack<String[]> stack = new Stack<String[]>();
        try {
            BufferedReader bfReader = new BufferedReader(new FileReader(DocPanel.hospital+"hospital.txt"));
            String str = bfReader.readLine();
            while (str != null) {
                String strr[] = str.split(", ");
                stack.push(strr);
                str = bfReader.readLine();
            }
            bfReader.close();
        } catch (Exception ex) {
            System.out.println(ex);
        }
        return stack;

    }

    
    // Sort in Descending order
    public Stack<User> sortInDSC() {
        Stack<User> tmpStack = new Stack<User>();
        Stack<User> stack = getUserStack();
        while (!stack.isEmpty()) {
            User user1 = stack.pop();
            while (!tmpStack.isEmpty() && tmpStack.peek().getName().compareTo(user1.getName()) > 0) {
                stack.push(tmpStack.pop());
            }
            tmpStack.push(user1);
        }
        return tmpStack;
    }
    

    //Sort in Ascending order
    public Stack<User> sortInASC() {
        Stack<User> tmpStack = new Stack<User>();
        Stack<User> stack = getUserStack();
        while (!stack.isEmpty()) {
            User user1 = stack.pop();
            while (!tmpStack.isEmpty() && tmpStack.peek().getName().compareTo(user1.getName()) < 0) {
                stack.push(tmpStack.pop());
            }
            tmpStack.push(user1);
        }
        return tmpStack;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPatient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ascBtn;
    private javax.swing.JButton back1;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton dscBtn;
    private javax.swing.JLabel hospitalName;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7Exit1;
    private javax.swing.JLabel jLabel8Mini;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton logout;
    private javax.swing.JTable patientTable;
    private javax.swing.JTextField searchPatientTxt;
    // End of variables declaration//GEN-END:variables
}
